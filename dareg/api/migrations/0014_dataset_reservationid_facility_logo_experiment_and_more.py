# Generated by Django 4.2.18 on 2025-02-07 15:46

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0013_alter_dataset_onedata_dataset_id_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='dataset',
            name='reservationId',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Reservation ID'),
        ),
        migrations.AddField(
            model_name='facility',
            name='logo',
            field=models.URLField(blank=True, verbose_name='Logo'),
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Name')),
                ('start_time', models.DateTimeField(blank=True, max_length=200, null=True, verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, max_length=200, null=True, verbose_name='End Time')),
                ('note', models.CharField(blank=True, max_length=500, verbose_name='Note')),
                ('status', models.CharField(choices=[('new', 'NEW'), ('prepared', 'PREPARED'), ('running', 'RUNNING'), ('synchronizing', 'SYNCHRONIZING'), ('success', 'SUCCESS'), ('failure', 'FAILURE')], default=api.models.ExperimentStatus['NEW'], max_length=20)),
                ('onedata_file_id', models.CharField(blank=True, max_length=512, null=True, verbose_name='Onedata File ID')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.dataset')),
                ('modified_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('method', models.CharField(max_length=500, verbose_name='Method')),
                ('support', models.CharField(max_length=500, verbose_name='Support')),
                ('contact', models.CharField(max_length=500, verbose_name='Contact')),
                ('default_data_dir', models.CharField(default='/data', max_length=1024, verbose_name='Default data directory')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.facility')),
                ('modified_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('facility', 'name')},
            },
        ),
    ]
